# Generated by Django 5.2.7 on 2025-10-30 15:08

import django.core.validators
import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Employee',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('factorial_id', models.CharField(blank=True, help_text='Factorial ID of the entity', max_length=100, null=True, unique=True)),
                ('tair_id', models.CharField(blank=True, help_text='Tair ID of the entity', max_length=100, null=True, unique=True)),
                ('name', models.CharField(help_text='Name of the entity', max_length=100)),
                ('description', models.TextField(blank=True, help_text='Description of the entity')),
                ('created_at', models.DateTimeField(auto_now_add=True, help_text='When the record was created')),
                ('updated_at', models.DateTimeField(auto_now=True, help_text='When the record was last updated')),
                ('is_active', models.BooleanField(default=True, help_text='Whether the entity is active')),
                ('first_name', models.CharField(help_text="Employee's first name", max_length=50)),
                ('last_name', models.CharField(help_text="Employee's last name", max_length=50)),
                ('email', models.EmailField(help_text="Employee's email address", max_length=254, unique=True, validators=[django.core.validators.EmailValidator()])),
            ],
            options={
                'verbose_name': 'Employee',
                'verbose_name_plural': 'Employees',
                'ordering': ['last_name', 'first_name'],
            },
        ),
        migrations.CreateModel(
            name='Manager',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('factorial_id', models.CharField(blank=True, help_text='Factorial ID of the entity', max_length=100, null=True, unique=True)),
                ('tair_id', models.CharField(blank=True, help_text='Tair ID of the entity', max_length=100, null=True, unique=True)),
                ('name', models.CharField(help_text='Name of the entity', max_length=100)),
                ('description', models.TextField(blank=True, help_text='Description of the entity')),
                ('created_at', models.DateTimeField(auto_now_add=True, help_text='When the record was created')),
                ('updated_at', models.DateTimeField(auto_now=True, help_text='When the record was last updated')),
                ('is_active', models.BooleanField(default=True, help_text='Whether the entity is active')),
                ('effective_from', models.DateField(help_text='Start date of this manager relationship')),
                ('effective_to', models.DateField(blank=True, help_text='End date of this manager relationship (null for ongoing relationships)', null=True)),
                ('employee', models.ForeignKey(help_text='Employee in this manager relationship', on_delete=django.db.models.deletion.CASCADE, related_name='manager_relationships', to='engagement.employee')),
                ('manager', models.ForeignKey(help_text='Manager in this relationship', on_delete=django.db.models.deletion.CASCADE, related_name='managed_employees', to='engagement.employee')),
            ],
            options={
                'verbose_name': 'Manager',
                'verbose_name_plural': 'Managers',
                'ordering': ['-effective_from'],
            },
        ),
        migrations.CreateModel(
            name='Role',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('factorial_id', models.CharField(blank=True, help_text='Factorial ID of the entity', max_length=100, null=True, unique=True)),
                ('tair_id', models.CharField(blank=True, help_text='Tair ID of the entity', max_length=100, null=True, unique=True)),
                ('name', models.CharField(help_text='Name of the entity', max_length=100)),
                ('description', models.TextField(blank=True, help_text='Description of the entity')),
                ('created_at', models.DateTimeField(auto_now_add=True, help_text='When the record was created')),
                ('updated_at', models.DateTimeField(auto_now=True, help_text='When the record was last updated')),
                ('is_active', models.BooleanField(default=True, help_text='Whether the entity is active')),
                ('role_level_name', models.CharField(help_text="Combined role and level name (e.g., 'Senior Software Engineer')", max_length=150)),
                ('role_name', models.CharField(help_text="Name of the role (e.g., 'Software Engineer')", max_length=100)),
                ('level_name', models.CharField(blank=True, help_text="Level of the role (e.g., 'Senior', 'Junior', 'Lead')", max_length=50, null=True)),
            ],
            options={
                'verbose_name': 'Role',
                'verbose_name_plural': 'Roles',
                'ordering': ['role_name', 'level_name'],
                'unique_together': {('role_name', 'level_name')},
            },
        ),
        migrations.CreateModel(
            name='Contract',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('factorial_id', models.CharField(blank=True, help_text='Factorial ID of the entity', max_length=100, null=True, unique=True)),
                ('tair_id', models.CharField(blank=True, help_text='Tair ID of the entity', max_length=100, null=True, unique=True)),
                ('name', models.CharField(help_text='Name of the entity', max_length=100)),
                ('description', models.TextField(blank=True, help_text='Description of the entity')),
                ('created_at', models.DateTimeField(auto_now_add=True, help_text='When the record was created')),
                ('updated_at', models.DateTimeField(auto_now=True, help_text='When the record was last updated')),
                ('is_active', models.BooleanField(default=True, help_text='Whether the entity is active')),
                ('salary_amount', models.DecimalField(decimal_places=2, help_text='Salary amount for this contract', max_digits=12)),
                ('effective_from', models.DateField(help_text='Start date of the contract')),
                ('effective_to', models.DateField(blank=True, help_text='End date of the contract (null for ongoing contracts)', null=True)),
                ('employee', models.ForeignKey(help_text='Employee associated with this contract', on_delete=django.db.models.deletion.CASCADE, related_name='contracts', to='engagement.employee')),
                ('role', models.ForeignKey(help_text='Role for this contract', on_delete=django.db.models.deletion.PROTECT, related_name='contracts', to='engagement.role')),
            ],
            options={
                'verbose_name': 'Contract',
                'verbose_name_plural': 'Contracts',
                'ordering': ['-effective_from'],
            },
        ),
        migrations.CreateModel(
            name='Team',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('factorial_id', models.CharField(blank=True, help_text='Factorial ID of the entity', max_length=100, null=True, unique=True)),
                ('tair_id', models.CharField(blank=True, help_text='Tair ID of the entity', max_length=100, null=True, unique=True)),
                ('name', models.CharField(help_text='Name of the entity', max_length=100)),
                ('description', models.TextField(blank=True, help_text='Description of the entity')),
                ('created_at', models.DateTimeField(auto_now_add=True, help_text='When the record was created')),
                ('updated_at', models.DateTimeField(auto_now=True, help_text='When the record was last updated')),
                ('is_active', models.BooleanField(default=True, help_text='Whether the entity is active')),
                ('team_name', models.CharField(help_text='Name of the team', max_length=100)),
                ('nature', models.CharField(choices=[('team', 'Team'), ('market', 'Market'), ('office', 'Office')], default='team', help_text='Whether this is a team or market', max_length=10)),
                ('level', models.IntegerField(blank=True, help_text='Organizational level (1 = top level, higher numbers = deeper in hierarchy)', null=True)),
                ('parent_team', models.ForeignKey(blank=True, help_text='Parent team in the organizational hierarchy', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='child_teams', to='engagement.team')),
            ],
            options={
                'verbose_name': 'Team',
                'verbose_name_plural': 'Teams',
                'ordering': ['level', 'team_name'],
                'unique_together': {('team_name', 'parent_team')},
            },
        ),
        migrations.CreateModel(
            name='TeamMembership',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('effective_from', models.DateField(blank=True, help_text='Date when the membership becomes effective', null=True)),
                ('effective_to', models.DateField(blank=True, help_text='Date when the membership ends', null=True)),
                ('is_lead', models.BooleanField(default=False, help_text='Whether this member is a team leader')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('employee', models.ForeignKey(help_text='Employee who is a member of the team', on_delete=django.db.models.deletion.CASCADE, related_name='team_memberships', to='engagement.employee')),
                ('team', models.ForeignKey(help_text='Team the employee belongs to', on_delete=django.db.models.deletion.CASCADE, related_name='memberships', to='engagement.team')),
            ],
            options={
                'verbose_name': 'Team Membership',
                'verbose_name_plural': 'Team Memberships',
                'ordering': ['-effective_from', 'team__team_name', 'employee__last_name'],
                'unique_together': {('employee', 'team', 'effective_from')},
            },
        ),
    ]
